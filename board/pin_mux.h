/*
 * The Clear BSD License
 * Copyright (c) 2018, NXP Semiconductors, Inc.
 * All rights reserved.
 *
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted (subject to the limitations in the disclaimer below) provided
 *  that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PIN_MUX_H_
#define _PIN_MUX_H_

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/

/*! @brief Direction type  */
typedef enum _pin_mux_direction
{
    kPIN_MUX_DirectionInput = 0U,        /* Input direction */
    kPIN_MUX_DirectionOutput = 1U,       /* Output direction */
    kPIN_MUX_DirectionInputOrOutput = 2U /* Input or output direction */
} pin_mux_direction_t;

/*!
 * @addtogroup pin_mux
 * @{
 */

/***********************************************************************************************************************
 * API
 **********************************************************************************************************************/

#if defined(__cplusplus)
extern "C" {
#endif

/*!
 * @brief Calls initialization functions.
 *
 */
void BOARD_InitBootPins(void);
//
//#define IOCON_PIO_CLKDIV0 0x00u      /*!<@brief IOCONCLKDIV0 */
//#define IOCON_PIO_HYS_EN 0x20u       /*!<@brief Enable hysteresis */
//#define IOCON_PIO_INV_DI 0x00u       /*!<@brief Input not invert */
//#define IOCON_PIO_MODE_PULLUP 0x10u  /*!<@brief Selects pull-up function */
//#define IOCON_PIO_OD_DI 0x00u        /*!<@brief Disables Open-drain function */
//#define IOCON_PIO_SMODE_BYPASS 0x00u /*!<@brief Bypass input filter */
//
/*! @name PIO0_13 (number 3), RELAY
  @{ */
#define BOARD_INITPINS_RELAY_ID_PERIPHERAL GPIO                    /*!<@brief Device name: GPIO */
#define BOARD_INITPINS_RELAY_ID_SIGNAL PIO0                        /*!<@brief GPIO signal: PIO0 */
#define BOARD_INITPINS_RELAY_ID_GPIO GPIO                          /*!<@brief GPIO device name: GPIO */
#define BOARD_INITPINS_RELAY_ID_GPIO_PIN 13U                       /*!<@brief PIO0 pin index: 13 */
#define BOARD_INITPINS_RELAY_ID_PORT 0U                            /*!<@brief PORT device name: 0U */
#define BOARD_INITPINS_RELAY_ID_PIN 13U                            /*!<@brief 0U pin index: 13 */
#define BOARD_INITPINS_RELAY_ID_CHANNEL 13                         /*!<@brief GPIO PIO0 channel: 13 */
#define BOARD_INITPINS_RELAY_ID_PIN_NAME PIO0_13                   /*!<@brief Pin name */
#define BOARD_INITPINS_RELAY_ID_LABEL "RELAY"                      /*!<@brief Label */
#define BOARD_INITPINS_RELAY_ID_NAME "RELAY_ID"                    /*!<@brief Identifier name */
#define BOARD_INITPINS_RELAY_ID_DIRECTION kPIN_MUX_DirectionOutput /*!<@brief Direction */
                                                                   /* @} */

/*! @name PIO0_1 (number 12), READY_LED
  @{ */
#define BOARD_INITPINS_READY_LED_ID_PERIPHERAL GPIO                    /*!<@brief Device name: GPIO */
#define BOARD_INITPINS_READY_LED_ID_SIGNAL PIO0                        /*!<@brief GPIO signal: PIO0 */
#define BOARD_INITPINS_READY_LED_ID_GPIO GPIO                          /*!<@brief GPIO device name: GPIO */
#define BOARD_INITPINS_READY_LED_ID_GPIO_PIN 1U                        /*!<@brief PIO0 pin index: 1 */
#define BOARD_INITPINS_READY_LED_ID_PORT 0U                            /*!<@brief PORT device name: 0U */
#define BOARD_INITPINS_READY_LED_ID_PIN 1U                             /*!<@brief 0U pin index: 1 */
#define BOARD_INITPINS_READY_LED_ID_CHANNEL 1                          /*!<@brief GPIO PIO0 channel: 1 */
#define BOARD_INITPINS_READY_LED_ID_PIN_NAME PIO0_1                    /*!<@brief Pin name */
#define BOARD_INITPINS_READY_LED_ID_LABEL "READY_LED"                  /*!<@brief Label */
#define BOARD_INITPINS_READY_LED_ID_NAME "READY_LED_ID"                /*!<@brief Identifier name */
#define BOARD_INITPINS_READY_LED_ID_DIRECTION kPIN_MUX_DirectionOutput /*!<@brief Direction */
                                                                       /* @} */

/*! @name PIO0_15 (number 11), ERROR_LED
  @{ */
#define BOARD_INITPINS_ERROR_LED_ID_PERIPHERAL GPIO                    /*!<@brief Device name: GPIO */
#define BOARD_INITPINS_ERROR_LED_ID_SIGNAL PIO0                        /*!<@brief GPIO signal: PIO0 */
#define BOARD_INITPINS_ERROR_LED_ID_GPIO GPIO                          /*!<@brief GPIO device name: GPIO */
#define BOARD_INITPINS_ERROR_LED_ID_GPIO_PIN 15U                       /*!<@brief PIO0 pin index: 15 */
#define BOARD_INITPINS_ERROR_LED_ID_PORT 0U                            /*!<@brief PORT device name: 0U */
#define BOARD_INITPINS_ERROR_LED_ID_PIN 15U                            /*!<@brief 0U pin index: 15 */
#define BOARD_INITPINS_ERROR_LED_ID_CHANNEL 15                         /*!<@brief GPIO PIO0 channel: 15 */
#define BOARD_INITPINS_ERROR_LED_ID_PIN_NAME PIO0_15                   /*!<@brief Pin name */
#define BOARD_INITPINS_ERROR_LED_ID_LABEL "ERROR_LED"                  /*!<@brief Label */
#define BOARD_INITPINS_ERROR_LED_ID_NAME "ERROR_LED_ID"                /*!<@brief Identifier name */
#define BOARD_INITPINS_ERROR_LED_ID_DIRECTION kPIN_MUX_DirectionOutput /*!<@brief Direction */
                                                                       /* @} */

/*! @name PIO0_9 (number 13), DAT_LED
  @{ */
#define BOARD_INITPINS_DAT_LED_ID_PERIPHERAL GPIO                    /*!<@brief Device name: GPIO */
#define BOARD_INITPINS_DAT_LED_ID_SIGNAL PIO0                        /*!<@brief GPIO signal: PIO0 */
#define BOARD_INITPINS_DAT_LED_ID_GPIO GPIO                          /*!<@brief GPIO device name: GPIO */
#define BOARD_INITPINS_DAT_LED_ID_GPIO_PIN 9U                        /*!<@brief PIO0 pin index: 9 */
#define BOARD_INITPINS_DAT_LED_ID_PORT 0U                            /*!<@brief PORT device name: 0U */
#define BOARD_INITPINS_DAT_LED_ID_PIN 9U                             /*!<@brief 0U pin index: 9 */
#define BOARD_INITPINS_DAT_LED_ID_CHANNEL 9                          /*!<@brief GPIO PIO0 channel: 9 */
#define BOARD_INITPINS_DAT_LED_ID_PIN_NAME PIO0_9                    /*!<@brief Pin name */
#define BOARD_INITPINS_DAT_LED_ID_LABEL "DAT_LED"                    /*!<@brief Label */
#define BOARD_INITPINS_DAT_LED_ID_NAME "DAT_LED_ID"                  /*!<@brief Identifier name */
#define BOARD_INITPINS_DAT_LED_ID_DIRECTION kPIN_MUX_DirectionOutput /*!<@brief Direction */
                                                                     /* @} */
/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitPins(void); /* Function assigned for the Cortex-M0P */

#if defined(__cplusplus)
}
#endif

/*!
 * @}
 */
#endif /* _PIN_MUX_H_ */

/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
